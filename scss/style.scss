// Custom.scss
// Option B: Include parts of Bootstrap

// 1. Include functions first (so you can manipulate colors, SVGs, calc, etc)
@import "../node_modules/bootstrap/scss/functions";

// 2. Include any default variable overrides here
// Globals
$spacer: 2rem;
$enable-rounded: true;
$enable-shadows: true;
$enable-gradients: true;
$enable-transitions: false;
$enable-caret: true; // true is default so not needed unless false
$enable-button-pointers: false;
$enable-validation-icons: false; // icons showing correct info added to field
$enable-negative-margins: true;
$enable-important-utilities: true;

// Custom color definitions
$primary: #9B2943;       
$secondary: #FFC857;     
$custom-pink: #a03e4e;   // Custom pink color
$custom-gray: #B0AEB3;   // Custom gray color
$custom-dark: #333134;   // Custom dark 
$custom-light: #f8f9fa;
$white: #ffffff;        

$body-bg: $primary;
$body-color: $white;

// Link Styles
$link-color: $white;
$link-hover-color: $primary;
$link-decoration: none;
$link-hover-decoration: underline;

// Custom navbar breakpoint
$navbar-breakpoint: 1200px; // Change to the desired breakpoint

// 3. Include remainder of required Bootstrap stylesheets (including any separate color mode stylesheets)
@import "../node_modules/bootstrap/scss/variables";
@import "../node_modules/bootstrap/scss/variables-dark";

// 4. Include any default map overrides here
// Merge custom colors into Bootstrap's color map
$custom-colors: (
  "custom-pink": $custom-pink,
  "custom-gray": $custom-gray,
  "custom-dark": $custom-dark,
  "custom-light" : $custom-light
);

// Override Bootstrap's default theme colors
$theme-colors: map-merge(
  $theme-colors,
  (
    "primary": $primary,
    "secondary": $secondary,
    "dark": $custom-dark,      // Override dark color
    "custom-pink": $custom-pink,
    "custom-gray": $custom-gray
  )
);

// 5. Include remainder of required parts
@import "../node_modules/bootstrap/scss/maps";
@import "../node_modules/bootstrap/scss/mixins";
@import "../node_modules/bootstrap/scss/root";

// 6. Optionally include any other parts as needed
@import "../node_modules/bootstrap/scss/utilities";
@import "../node_modules/bootstrap/scss/reboot";
@import "../node_modules/bootstrap/scss/type";
@import "../node_modules/bootstrap/scss/images";
@import "../node_modules/bootstrap/scss/containers";
@import "../node_modules/bootstrap/scss/grid";
@import "../node_modules/bootstrap/scss/helpers";

@import "../node_modules/bootstrap/scss/navbar";
@import "../node_modules/bootstrap/scss/nav";
@import "../node_modules/bootstrap/scss/accordion";
@import "../node_modules/bootstrap/scss/alert";
@import "../node_modules/bootstrap/scss/badge";
@import "../node_modules/bootstrap/scss/breadcrumb";
@import "../node_modules/bootstrap/scss/button-group";
@import "../node_modules/bootstrap/scss/buttons";
@import "../node_modules/bootstrap/scss/card";
//These can be removed if not needed
@import "../node_modules/bootstrap/scss/carousel";
@import "../node_modules/bootstrap/scss/modal";
@import "../node_modules/bootstrap/scss/tooltip";
@import "../node_modules/bootstrap/scss/popover";

@import "../node_modules/bootstrap/scss/close";
@import "../node_modules/bootstrap/scss/dropdown";
@import "../node_modules/bootstrap/scss/list-group";
@import "../node_modules/bootstrap/scss/placeholders";
@import "../node_modules/bootstrap/scss/spinners";
@import "../node_modules/bootstrap/scss/offcanvas";
@import "../node_modules/bootstrap/scss/transitions";

// 7. Optionally include utilities API last to generate classes based on the Sass map in `_utilities.scss`
@import "../node_modules/bootstrap/scss/utilities/api";


html {
  height: 100%;
}

h1, h2, h3, h4, h5, h6 {
  color: $custom-light;
}

.header {
  width: 100%;
  background-color: rgb(248, 249, 250);
}

.hero {
  background: #6B747B url('/images/girl-lg.jpg') no-repeat center center;
  background-size: cover;
  padding: 100px 20px;
  width: 100%;

  .intro-text {
    max-width: 30%;
  }

}
.highlight-section {
  background-color: $custom-pink;
  color: $custom-dark;
  width: 100%;


}

.testimonial {
  //background: #f8f9fa;
  padding: 50px;
  border-radius: 10px;
}

.partner-logo {
  max-height: 100px;
  margin: 20px;
}
//Desktop Menu
// Navbar link hover color
.navbar-nav .nav-link {
	color: $custom-dark; // Default link color
	&:hover,
	&:focus {
	  color: $primary; // Hover color (your primary color)
	}
  }

li.nav-item {
  margin-right: 1.2rem;
}

li.nav-item:last-child {
  margin-right: 0;
}

.navbar-toggler {
  width: 20px;
  height: 20px;
  position: relative;
  transition: .5s ease-in-out;
  border: none;
  outline: none;
  border-radius: none;
}

.navbar-toggler,
.navbar-toggler:focus,
.navbar-toggler:active,
.navbar-toggler-icon:focus {
  outline: none !important;
  box-shadow: none !important;
  border: 0 !important;
  border-radius: none !important;
}

.navbar-toggler span {
  margin: 0;
  padding: 0;
}

.toggler-icon {
  display: block;
  position: absolute;
  height: 3px;
  width: 100%;
  background: #d3531a;
  border-radius: 1;
  opacity: 1;
  left: 0;
  transform: rotate(0deg);
  transition: .25s ease-in-out;
}

.middle-bar {
  margin-top: 0px;
}

.navbar-toggler .top-bar {
  margin-top: 0;
  transform: rotate(135deg);
}

.navbar-toggler .middle-bar {
  opacity: 0;
  filter: alpha(opacity=0);
}

.navbar-toggler .bottom-bar {
  margin-top: 0;
  transform: rotate(-135deg);
}

.navbar-toggler.collapsed .top-bar {
  margin-top: -20px;
  transform: rotate(0deg);
}

.navbar-toggler.collapsed .middle-bar {
  opacity: 1;
  filter: alpha(opacity=100);
}

.navbar-toggler.collapsed .bottom-bar {
  margin-top: 20px;
  transform: rotate(0deg);
}

/*blockquote section*/
/* Full-width section */
.full-width-section {
  background-color: #333134;
  position: relative;
  width: 100%;
  min-height: 54vh;
  overflow: hidden;
  color: white; /* Set default text color to white */
}

/* Image container */
.image-container {
  width: 50%;
  height: 100%;
}

.image-container img {
  width: 100%;
  height: auto;
  display: block;
}

/* Blockquote container */
.blockquote-container {
  align-items: center;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.5); /* Semi-transparent overlay */
  padding: 20px;
  box-sizing: border-box;
}

/* Styled blockquote */
.styled-blockquote {
  position: relative;
  font-size: 1.5rem;
  font-style: italic;
  max-width: 800px;
  text-align: center;
  padding: 20px;
}

/* Large quote mark */
.styled-blockquote::before {
  content: "â€œ";
  position: absolute;
  top: -50px;
  left: 50%;
  transform: translateX(-50%);
  font-size: 10rem;
  color: rgba(155, 41, 67, 0.3); /* Lighter version of #9B2943 with transparency */
  z-index: -1;
}

/* Blockquote text */
.styled-blockquote p {
  position: relative;
  z-index: 1;
  margin: 0;
}

/* Blockquote footer */
.styled-blockquote footer {
  margin-top: 10px;
  font-size: 1rem;
  font-style: normal;
  color: rgba(255, 255, 255, 0.8); /* Slightly transparent white */
}

.avatar {
  width: 100px;
  height: 100px;
  object-fit: cover; /* Ensures the image covers the area without distortion */
  border: 6px solid color-mix(in srgb, var(--default-color), transparent 85%); 
}

.footer {
  background-color: $custom-light;
  color: $custom-dark;
}